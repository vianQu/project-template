<?xml version="1.0" encoding="UTF-8"?>
<project name="project-name" default="usage" basedir="../">

    <!-- General properties -->
    <property environment="env"/>
    <property name="app.name" value="project-name"/>
    <property name="package.name" value="project"/>
    <property name="app.version" value="1.0"/>
    <property name="src.home" value="${basedir}/src"/>
    <property name="build" value="${basedir}/build"/>
    <property name="build.home" value="${build}/${app.name}"/>
    <property name="dist.home" value="${basedir}/dist"/>
    <property name="lib.home" value="${basedir}/lib"/>
    <property name="resources.home" value="${basedir}\resources"/>
    <property name="validation" value="${basedir}\resources\validation"/>
    <property name="struts2.home" value="${basedir}\resources\struts-config"/>
    <property name="web.home" value="${basedir}/web"/>
    <property name="classes" value="${build.home}/WEB-INF/classes"/>
    <property name="tomcat.home.webapps" value="${env.CATALINA_HOME}/webapps"/>
    <property name="tomcat.home" value="${env.CATALINA_HOME}"/>


    <property name="manager.url" value="http://localhost:8080/manager/text"/>
    <property name="manager.username" value="ivan"/>
    <property name="manager.password" value="ivan"/>

    <!--for intelijIDEA only, to update exploded folder -->
    <property name="exploded" value="${basedir}/out/exploded"/>
    <property name="exploded.home" value="${exploded}/project-name"/>
    <property name="production" value="${basedir}/out/production"/>
    <property name="production.home" value="${production}/project-name"/>


     <!-- Default Classpath for all targets -->
    <path id="classpath_default">
        <pathelement path="${classes}"/>

        <fileset dir="${lib.home}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- TARGET: USAGE , target will be executed -->
    <target name="usage">
        <echo message="TARGETS"/>
        <echo message="======="/>
        <echo message="clean"/>
        <echo message="prepare"/>
        <echo message="compile"/>
        <echo message="createWARfile"/>
        <echo message="deploy"/>
        <!--<echo message="undeploy"/>-->
        <!--<echo message="copyJSPnTransaction"/>-->
    </target>

    <!-- TARGET: CLEAN, to clean folder /build and /dist -->
    <target name="clean"
            description="Delete old build and dist directories">

        <!--    <delete dir="${build.home}"/>-->
        <delete dir="${dist.home}"/>

        <delete dir="${exploded.home}"/>
        <delete dir="${production.home}"/>

        <delete dir="${basedir}/out"/>
        <delete dir="${basedir}/build"/>
        <delete dir="${tomcat.home.webapps}/${app.name}"/>
        <delete dir="${tomcat.home}/work/Catalina/localhost/${app.name}"/>

    </target>


    <!-- TARGET: PREPARE, to prepare and create folder as needed for project  -->
    <target name="prepare"
            depends="clean"
            description="Create build directories.">

        <!-- Create build directories as needed -->
        <mkdir dir="${build.home}"/>
        <!--<mkdir dir="${build.home}/WEB-INF"/>-->
        <mkdir dir="${build.home}/WEB-INF/classes"/>
        <mkdir dir="${build.home}/WEB-INF/lib"/>
        <!--<mkdir dir="${build.home}/WEB-INF/tld"/>-->
        <!--<mkdir dir="${build.home}/WEB-INF/dtd"/>-->

        <!-- Create pages directories -->
        <!--<mkdir dir="${build.home}/page"/>-->
        <!--<mkdir dir="${build.home}/media"/>-->
        <!--<mkdir dir="${build.home}/decorators"/>-->

        <!-- Create dist directories -->
        <mkdir dir="${dist.home}"/>

        <!-- Copy Files: web content (jsp, images, and script) -->
        <copy todir="${build.home}">
            <fileset dir="${web.home}"/>
        </copy>

        <!-- Copy libraries (.jar) -->
        <copy todir="${build.home}/WEB-INF/lib">
            <fileset dir="${lib.home}">
                <exclude name="j2ee.jar"/>
            </fileset>
        </copy>

        <!--copy media directory to web-->
        <!--<copy todir="${build.home}/media">-->
            <!--<fileset dir="${web.home}/media"/>-->
        <!--</copy>-->

        <!-- Create report directories -->
        <!--<mkdir dir="${build.home}/report"/>-->

        <!-- Copy Files: report (jrxml) -->
        <!--<copy todir="${build.home}/report">-->
            <!--<fileset dir="${web.home}/report"/>-->
        <!--</copy>-->

        <!-- Copy Files: dtd -->
        <!--<copy todir="${build.home}/WEB-INF/dtd">-->
            <!--<fileset dir="${web.home}/WEB-INF/dtd"/>-->
        <!--</copy>-->

        <!-- Copy Files: tld -->
        <!--<copy todir="${build.home}/WEB-INF/tld">-->
            <!--<fileset dir="${web.home}/WEB-INF/tld"/>-->
        <!--</copy>-->

        <!-- Copy Files: web.xml,dwr.xml -->
        <!--<copy file="${web.home}/WEB-INF/web.xml" todir="${build.home}/WEB-INF"/>-->
        <!--<copy todir="${build.home}/WEB-INF">-->
            <!--<fileset dir="${web.home}/WEB-INF">-->
                <!--<exclude name="${web.home}/WEB-INF/tld/**"/>-->
                <!--<exclude name="${web.home}/WEB-INF/dtd/**"/>-->
            <!--</fileset>-->
        <!--</copy>-->

        <!-- Copy file index.jsp -->
        <!--<copy file="${web.home}/index.jsp" todir="${build.home}"/>-->
        <!--<copy file="${web.home}/indexUser.jsp" todir="${build.home}"/>-->

        <!-- Create exploded directories -->
        <mkdir dir="${exploded.home}"/>
        <mkdir dir="${exploded.home}/WEB-INF"/>
        <mkdir dir="${exploded.home}/WEB-INF/classes"/>
        <mkdir dir="${production.home}"/>

    </target>

     <!-- Compiler Flags -->
    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="true"/>

    <!-- TARGET: COMPILE, to compile to java class -->
    <target name="compile"
            depends="prepare"
            description="Compile Java sources">

        <echo message="==================================================================="/>
        <echo message="Compiling Java source code to"/>
        <echo message="     ${classes}"/>
        <echo message="==================================================================="/>

        <!-- compile java to classes and store to folder /WEB-INF/classes -->
        <javac
                srcdir="${src.home}"
                destdir="${classes}"
                debug="${compile.debug}"
                deprecation="${compile.deprecation}"
                optimize="${compile.optimize}">
            <classpath refid="classpath_default"/>
        </javac>
    </target>

    <target name="createWARfile"
            depends="compile"
            description="Create WAR file">

        <echo message="==================================================================="/>
        <echo message="Create Web Archive (WAR) in ${dist.home}"/>
        <echo message="==================================================================="/>

        <taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" onerror="ignore"/>
        <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

        <!-- get list of file in struts resource folder then copy file .propeties and .xml to correct struts action folder -->
        <for param="folder">
            <path>
                <dirset dir="${validation}">
                    <!--<exclude name="mybatis-config"/>-->
                    <!--<exclude name="struts-config"/>-->
                    <!--<exclude name="spring-config"/>-->
                </dirset>
            </path>
            <sequential>
                <if>
                    <not>
                        <equals arg1="@{folder}" arg2="${validation}"/>
                    </not>
                    <then>

                        <propertyregex property="folder.name"
                                       override="yes"
                                       input="@{folder}"
                                       regexp="[A-Za-z]+\:\\[[\w]*\\]*\\resources\\validation\\([.]*)"
                                       replace="\1"/>

                        <var name="action.folder" unset="true"/>
                        <available file="${basedir}\build\${app.name}\WEB-INF\classes\${package.name}\${folder.name}\action" type="dir" property="action.folder"/>

                        <if>
                            <isset property="action.folder"/>
                            <then>
                                <copy todir="${classes}/${package.name}/${folder.name}/action">
                                    <fileset dir="@{folder}"/>
                                </copy>
                            </then>
                        </if>

                    </then>
                </if>
            </sequential>
        </for>

        <!-- copy file .properties and .xml to correct folder (ex: struts.xml, log4j.properties ) -->
        <copy todir="${classes}">
            <fileset dir="${resources.home}/struts-config"/>
        </copy>

        <!-- create folder transaction manager -->
        <mkdir dir="${classes}/mybatis-config"/>

        <!-- copy file .properties and .xml transaction manager -->
        <copy todir="${classes}/mybatis-config">
            <fileset dir="${resources.home}/mybatis-config"/>
        </copy>


        <!-- create folder spring ioc -->
        <mkdir dir="${classes}/spring-config"/>

        <!-- copy file .properties and .xml transaction manager -->
        <copy todir="${classes}/spring-config">
            <fileset dir="${resources.home}/spring-config"/>
        </copy>

        <!-- create file war -->
        <!-- for develompment, comment this, uncomment if integration test or production test -->
        <!--<jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}" index="true" compress="true"/>-->


        <war destfile="${dist.home}/${app.name}.war" webxml="${build.home}/WEB-INF/web.xml" update="true">
            <fileset dir="${build.home}">
                <include name="**/*"/>
            </fileset>
        </war>

    </target>

    <!--<target name="deploy"-->
            <!--depends="createWARfile"-->
            <!--description="Copy WAR file to app server webapps directory.">-->

        <!--<echo message=""/>-->
        <!--<echo message="==================================================================="/>-->
        <!--<echo message="Deleting WAR file in webapps directory."/>-->
        <!--<echo message="==================================================================="/>-->

        <!-- for develompment, comment this, uncomment if integration test or production test -->
        <!--<echo message=""/>-->
        <!--<echo message="==================================================================="/>-->
        <!--<echo message="Copying WAR file to app server webapps directory."/>-->
        <!--<echo message="==================================================================="/>-->
        <!--<copy file="${dist.home}/${app.name}.war" todir="${tomcat.home.webapps}"/>-->

        <!-- for develompment -->

    <!--</target>-->

    <target name="DeployOffline" depends="createWARfile" description="deploy offline">

        <delete dir="${tomcat.home.webapps}/${app.name}"/>
        <delete dir="${tomcat.home.webapps}/${app.name}.war"/>

        <echo message=""/>
        <echo message="==================================================================="/>
        <echo message="Copying web app files to app server webapps directory."/>
        <echo message="==================================================================="/>

        <copy todir="${tomcat.home.webapps}/${app.name}">
            <fileset dir="${build.home}"/>
        </copy>

    </target>

    <target name="DeployOnline" depends="createWARfile" description="deploy app when tomcat running">

        <!-- copi war en redeploy -->

        <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"
                 classpath="${tomcat.home}/lib/catalina-ant.jar"/>

        <deploy url="${manager.url}"
                username="${manager.username}"
                password="${manager.password}"
                path="/${app.name}"
                war="file:${dist.home}/${app.name}.war" update="true"/>
    </target>

    <target name="copyJSPnTransaction"
            description="copy jsp files and model xml(s) to tomcat webapps">

        <!-- copy file .jsp to tomcat webapps -->
        <copy todir="${tomcat.home.webapps}/${app.name}/page">
            <fileset dir="web/page"/>
        </copy>

        <!-- copy file .properties and .xml transaction manager -->
        <copy todir="${tomcat.home.webapps}/${app.name}/WEB-INF/classes/mybatis-config">
            <fileset dir="${resources.home}/mybatis-config"/>
        </copy>

        <!-- copy file .properties and .xml to correct folder (ex: struts.xml, log4j.properties ) -->
        <copy todir="${tomcat.home.webapps}/${app.name}/WEB-INF/classes">
            <fileset dir="${resources.home}/struts-config"/>
        </copy>

    </target>

    <target name="copyJSPnAction"
            description="copy jsp files to tomcat webapps">

        <!-- copy file .jsp to tomcat webapps -->
        <copy todir="${tomcat.home.webapps}/${app.name}/page">
            <fileset dir="web/page"/>
        </copy>

        <!-- copy file .properties and .xml to correct folder (ex: struts.xml, log4j.properties ) -->
        <copy todir="${tomcat.home.webapps}/${app.name}/WEB-INF/classes">
            <fileset dir="${resources.home}/struts-config"/>
        </copy>

    </target>

    <target name="copyJSP"
            description="copy jsp files to tomcat webapps">

        <!-- copy file .jsp to tomcat webapps -->
        <copy todir="${tomcat.home.webapps}/${app.name}/page">
            <fileset dir="web/page" />
        </copy>

    </target>


</project>